[42499975a17] {jit-log-opt-loop
# Loop 1 (tuple.contains [str]) : loop with 25 ops
[i0, p1, p2]
+219: label(i0, p1, p2, descr=TargetToken(128014300840416))
debug_merge_point(0, 0, 'tuple.contains [str]')
+224: p3 = getarrayitem_gc_r(p1, i0, descr=<ArrayP 8>)
+243: guard_class(p3, ConstClass(W_NoneObject), descr=<Guard0x746da6ede020>) [i0, p1, p2, p3]
+255: i5 = instance_ptr_eq(p3, p2)
+262: guard_false(i5, descr=<Guard0x746da6ec63a0>) [i0, p1, p2, p3]
+268: guard_nonnull_class(p2, ConstClass(W_BytesObject), descr=<Guard0x746da6ede070>) [i0, p1, p2, p3]
+300: i8 = instance_ptr_eq(ConstPtr(ptr7), p3)
+303: guard_true(i8, descr=<Guard0x746da6ec63d8>) [i0, p1, p2, p3]
+309: i10 = int_add(i0, 1)
+313: i11 = arraylen_gc(p1, descr=<ArrayP 8>)
+317: i12 = int_lt(i10, i11)
+320: guard_true(i12, descr=<Guard0x746da6ec6410>) [i0, p1, p2, p3]
debug_merge_point(0, 0, 'tuple.contains [str]')
+326: label(i10, p1, p2, i11, descr=TargetToken(128014300840480))
debug_merge_point(0, 0, 'tuple.contains [str]')
+336: p13 = getarrayitem_gc_r(p1, i10, descr=<ArrayP 8>)
+341: guard_class(p13, ConstClass(W_NoneObject), descr=<Guard0x746da6ede0c0>) [i10, p1, p2, p13]
+360: i16 = instance_ptr_eq(ConstPtr(ptr15), p13)
+363: guard_true(i16, descr=<Guard0x746da6ec6448>) [i10, p1, p2, p13]
+369: i18 = int_add(i10, 1)
+373: i19 = int_lt(i18, i11)
+376: guard_true(i19, descr=<Guard0x746da6ec6480>) [i10, p1, p2, p13]
debug_merge_point(0, 0, 'tuple.contains [str]')
+382: jump(i18, p1, p2, i11, descr=TargetToken(128014300840480))
+400: --end of the loop--
[424999e1e25] jit-log-opt-loop}
[4249e6d5c9f] {jit-log-opt-loop
# Loop 2 (<code object <module>, file 'example.py', line 1> #15 LOAD_NAME) : loop with 132 ops
[p0, p1]
+363: i2 = getfield_gc_i(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_last_instr 40>)
+374: p3 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_pycode 64>)
+378: i4 = getfield_gc_i(p0, descr=<FieldS pypy.interpreter.pyframe.PyFrame.inst_valuestackdepth 72>)
+382: p5 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_debugdata 16>)
+386: p6 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_last_exception 32>)
+390: p7 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_lastblock 48>)
+394: p8 = getfield_gc_r(p0, descr=<FieldP pypy.interpreter.pyframe.PyFrame.inst_locals_cells_stack_w 56>)
+398: p10 = getarrayitem_gc_r(p8, 0, descr=<ArrayP 8>)
+402: p12 = getarrayitem_gc_r(p8, 1, descr=<ArrayP 8>)
+406: label(p0, p1, i2, p3, i4, p5, p6, p7, p10, p12, descr=TargetToken(128014300842208))
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #15 LOAD_NAME')
+448: guard_value(i4, 0, descr=<Guard0x746da6ede110>) [p0, i2, p3, i4, p5, p6, p7, p10, p12, p1]
+458: guard_nonnull(p5, descr=<Guard0x746da6ec6b10>) [p0, i2, p3, i4, p5, p6, p7, p10, p12, p1]
+467: p14 = getfield_gc_r(p5, descr=<FieldP pypy.interpreter.pyframe.FrameDebugData.inst_w_f_trace 40>)
+471: guard_isnull(p14, descr=<Guard0x746da6ec6b48>) [p0, i2, p3, i4, p5, p6, p7, p10, p12, p1]
+480: p15 = getfield_gc_r(p5, descr=<FieldP pypy.interpreter.pyframe.FrameDebugData.inst_w_locals 56>)
+484: p16 = getfield_gc_r(p5, descr=<FieldP pypy.interpreter.pyframe.FrameDebugData.inst_w_globals 48>)
+488: i17 = instance_ptr_eq(p15, p16)
+491: guard_true(i17, descr=<Guard0x746da6ec6b80>) [p0, i2, p3, i4, p5, p6, p7, p10, p12, p1]
+504: guard_value(p3, ConstPtr(ptr18), descr=<Guard0x746da6ec6bb8>) [p0, i2, p3, i4, p5, p6, p7, p10, p12, p1]
+520: guard_value(p16, ConstPtr(ptr19), descr=<Guard0x746da6ede160>) [p0, i2, p3, i4, p5, p6, p7, p10, p12, p1]
+529: guard_not_invalidated(descr=<Guard0x746da6ec6bf0>) [p0, i2, p3, i4, p5, p6, p7, p10, p12, p1]
+529: p20 = getfield_gc_r(p16, descr=<FieldP pypy.objspace.std.dictmultiobject.W_ModuleDictObject.inst_mstrategy 16 pure>)
+540: guard_value(p20, ConstPtr(ptr21), descr=<Guard0x746da6ede1b0>) [p0, i2, p3, i4, p5, p6, p7, p10, p12, p1]
+556: i23 = getfield_gc_i(ConstPtr(ptr22), descr=<FieldS pypy.objspace.std.typeobject.IntMutableCell.inst_intvalue 8>)
+560: i24 = getfield_gc_i(p5, descr=<FieldU pypy.interpreter.pyframe.FrameDebugData.inst_is_being_profiled 64>)
+565: guard_value(i24, 0, descr=<Guard0x746da6ec6c28>) [p0, i2, p3, i4, p5, p6, p7, p10, p12, p1]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #18 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #21 COMPARE_OP')
+575: i27 = int_lt(i23, 10000)
+582: guard_true(i27, descr=<Guard0x746da6ec6c60>) [p0, i2, p3, i4, p5, p6, p7, p10, p12, p1]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #27 LOAD_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #33 BINARY_MODULO')
+588: i29 = int_eq(i23, -9223372036854775808)
+588: i31 = int_and(i23, 1)
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #34 POP_JUMP_IF_FALSE')
+595: guard_true(i31, descr=<Guard0x746da6ec6c98>) [p0, i2, p3, i4, p5, p6, p7, p10, p12, p1]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #37 LOAD_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #40 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #43 BINARY_ADD')
+604: i33 = int_add(i23, 1)
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #44 STORE_NAME')
+608: guard_value(p15, ConstPtr(ptr34), descr=<Guard0x746da6ede200>) [p0, i2, p3, i4, p5, p6, p7, p10, p12, p1]
+617: p35 = getfield_gc_r(p15, descr=<FieldP pypy.objspace.std.dictmultiobject.W_ModuleDictObject.inst_mstrategy 16 pure>)
+622: guard_value(p35, ConstPtr(ptr36), descr=<Guard0x746da6ede250>) [p0, i2, p3, i4, p5, p6, p7, p10, p12, p1]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #47 LOAD_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #50 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #53 BINARY_SUBTRACT')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #54 STORE_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #57 JUMP_FORWARD')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #60 LOAD_NAME')
+638: i38 = getfield_gc_i(ConstPtr(ptr37), descr=<FieldS pypy.objspace.std.typeobject.IntMutableCell.inst_intvalue 8>)
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #63 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #66 BINARY_MODULO')
+642: i40 = int_eq(i38, -9223372036854775808)
+642: i42 = int_and(i38, 1)
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #67 POP_JUMP_IF_FALSE')
+646: guard_true(i42, descr=<Guard0x746da6ec6cd0>) [p0, i2, p3, i4, p5, p6, p7, p10, p12, p1]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #70 JUMP_FORWARD')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #93 LOAD_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #96 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #99 BINARY_ADD')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #100 STORE_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #103 LOAD_NAME')
+655: setfield_gc(ConstPtr(ptr43), i33, descr=<FieldS pypy.objspace.std.typeobject.IntMutableCell.inst_intvalue 8>)
+659: i45 = getfield_gc_i(ConstPtr(ptr44), descr=<FieldS pypy.objspace.std.typeobject.IntMutableCell.inst_intvalue 8>)
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #106 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #109 BINARY_ADD')
+663: i47 = int_add_ovf(i45, 1)
+670: guard_no_overflow(descr=<Guard0x746da6ede2a0>) [p0, p5, p6, p7, p1, i45]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #110 STORE_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #113 JUMP_ABSOLUTE')
+676: i49 = getfield_raw_i(128014299575712, descr=<FieldS pypysig_long_struct_inner.c_value 0>)
+689: setfield_gc(ConstPtr(ptr50), i47, descr=<FieldS pypy.objspace.std.typeobject.IntMutableCell.inst_intvalue 8>)
+693: i52 = int_lt(i49, 0)
+697: guard_false(i52, descr=<Guard0x746da6ede2f0>) [p0, p5, p6, p7, p1, i49]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #15 LOAD_NAME')
+703: label(p0, p1, p5, p6, p7, i47, descr=TargetToken(128014300842272))
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #15 LOAD_NAME')
+720: guard_not_invalidated(descr=<Guard0x746da6ede340>) [p0, p5, p6, p7, p1]
+727: i54 = getfield_gc_i(ConstPtr(ptr53), descr=<FieldS pypy.objspace.std.typeobject.IntMutableCell.inst_intvalue 8>)
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #18 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #21 COMPARE_OP')
+731: i56 = int_lt(i54, 10000)
+738: guard_true(i56, descr=<Guard0x746da6ec6d08>) [p0, p5, p6, p7, p1]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #27 LOAD_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #33 BINARY_MODULO')
+744: i58 = int_eq(i54, -9223372036854775808)
+744: i60 = int_and(i54, 1)
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #34 POP_JUMP_IF_FALSE')
+751: guard_true(i60, descr=<Guard0x746da6ec6d40>) [p0, p5, p6, p7, p1]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #37 LOAD_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #40 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #43 BINARY_ADD')
+760: i62 = int_add(i54, 1)
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #44 STORE_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #47 LOAD_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #50 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #53 BINARY_SUBTRACT')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #54 STORE_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #57 JUMP_FORWARD')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #60 LOAD_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #63 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #66 BINARY_MODULO')
+764: i64 = int_eq(i47, -9223372036854775808)
+764: i66 = int_and(i47, 1)
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #67 POP_JUMP_IF_FALSE')
+768: guard_true(i66, descr=<Guard0x746da6ec6d78>) [p0, p5, p6, p7, p1]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #70 JUMP_FORWARD')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #93 LOAD_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #96 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #99 BINARY_ADD')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #100 STORE_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #103 LOAD_NAME')
+777: setfield_gc(ConstPtr(ptr67), i62, descr=<FieldS pypy.objspace.std.typeobject.IntMutableCell.inst_intvalue 8>)
+788: i69 = getfield_gc_i(ConstPtr(ptr68), descr=<FieldS pypy.objspace.std.typeobject.IntMutableCell.inst_intvalue 8>)
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #106 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #109 BINARY_ADD')
+792: i71 = int_add_ovf(i69, 1)
+799: guard_no_overflow(descr=<Guard0x746da6ede390>) [p0, p5, p6, p7, p1, i69]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #110 STORE_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #113 JUMP_ABSOLUTE')
+805: i73 = getfield_raw_i(128014299575712, descr=<FieldS pypysig_long_struct_inner.c_value 0>)
+818: setfield_gc(ConstPtr(ptr74), i71, descr=<FieldS pypy.objspace.std.typeobject.IntMutableCell.inst_intvalue 8>)
+822: i76 = int_lt(i73, 0)
+826: guard_false(i76, descr=<Guard0x746da6ede3e0>) [p0, p5, p6, p7, p1, i73]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #15 LOAD_NAME')
+832: jump(p0, p1, p5, p6, p7, i71, descr=TargetToken(128014300842272))
+848: --end of the loop--
[4249e7302c5] jit-log-opt-loop}
[4249e86ac2d] {jit-log-opt-bridge
# bridge out of Guard 0x746da6ec6d40 with 54 ops
[p0, p1, p2, p3, p4]
+94: guard_not_invalidated(descr=<Guard0x746da6ede430>) [p0, p1, p2, p3, p4]
+101: i6 = getfield_gc_i(ConstPtr(ptr5), descr=<FieldS pypy.objspace.std.typeobject.IntMutableCell.inst_intvalue 8>)
+105: i7 = getfield_gc_i(p1, descr=<FieldU pypy.interpreter.pyframe.FrameDebugData.inst_is_being_profiled 64>)
+117: guard_value(i7, 0, descr=<Guard0x746da6ec6f70>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #18 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #21 COMPARE_OP')
+127: i10 = int_lt(i6, 10000)
+134: guard_true(i10, descr=<Guard0x746da6ec6fa8>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #24 POP_JUMP_IF_FALSE')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #27 LOAD_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #30 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #33 BINARY_MODULO')
+140: i12 = int_eq(i6, -9223372036854775808)
+140: i14 = int_and(i6, 1)
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #34 POP_JUMP_IF_FALSE')
+147: guard_false(i14, descr=<Guard0x746da6ec6fe0>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #60 LOAD_NAME')
+163: i16 = getfield_gc_i(ConstPtr(ptr15), descr=<FieldS pypy.objspace.std.typeobject.IntMutableCell.inst_intvalue 8>)
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #63 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #66 BINARY_MODULO')
+167: i18 = int_eq(i16, -9223372036854775808)
+167: i20 = int_and(i16, 1)
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #67 POP_JUMP_IF_FALSE')
+174: guard_false(i20, descr=<Guard0x746da6ec7018>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #73 LOAD_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #76 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #79 BINARY_SUBTRACT')
+183: i22 = int_sub_ovf(i16, 1)
+187: guard_no_overflow(descr=<Guard0x746da6ec7050>) [p0, p1, p2, p3, p4]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #80 STORE_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #83 LOAD_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #86 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #89 BINARY_ADD')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #90 STORE_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #93 LOAD_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #96 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #99 BINARY_ADD')
+193: i24 = int_add(i6, 1)
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #100 STORE_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #103 LOAD_NAME')
+197: setfield_gc(ConstPtr(ptr25), i24, descr=<FieldS pypy.objspace.std.typeobject.IntMutableCell.inst_intvalue 8>)
+201: i27 = getfield_gc_i(ConstPtr(ptr26), descr=<FieldS pypy.objspace.std.typeobject.IntMutableCell.inst_intvalue 8>)
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #106 LOAD_CONST')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #109 BINARY_ADD')
+205: i29 = int_add_ovf(i27, 1)
+212: guard_no_overflow(descr=<Guard0x746da6ede480>) [p0, p1, p2, p3, p4, i27]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #110 STORE_NAME')
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #113 JUMP_ABSOLUTE')
+218: i31 = getfield_raw_i(128014299575712, descr=<FieldS pypysig_long_struct_inner.c_value 0>)
+231: setfield_gc(ConstPtr(ptr32), i29, descr=<FieldS pypy.objspace.std.typeobject.IntMutableCell.inst_intvalue 8>)
+235: i34 = int_lt(i31, 0)
+239: guard_false(i34, descr=<Guard0x746da6ede4d0>) [p0, p1, p2, p3, p4, i31]
debug_merge_point(0, 0, '<code object <module>. file 'example.py'. line 1> #15 LOAD_NAME')
+245: jump(p0, p4, p1, p2, p3, i29, descr=TargetToken(128014300842272))
+272: --end of the loop--
[4249e886aeb] jit-log-opt-bridge}
[4249e8a80cf] {jit-summary
Tracing:      	3	0.051824
Backend:      	3	0.003438
TOTAL:      		0.079596
ops:             	1175
heapcached ops:  	662
recorded ops:    	181
  calls:         	38
guards:          	77
opt ops:         	205
opt guards:      	45
opt guards shared:	27
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
abort: segmenting trace:	0
virtualizables forced:	0
nvirtuals:       	3
nvholes:         	0
nvreused:        	0
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	2
Total # of bridges:	1
Freed # of loops:	0
Freed # of bridges:	0
[4249e8ae9d7] jit-summary}
